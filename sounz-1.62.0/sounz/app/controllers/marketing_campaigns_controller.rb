require 'application_helper'

class MarketingCampaignsController < ApplicationController
  
  include ApplicationHelper
  
  # GENERATED BY SCAFFOLDING, CURRENTLY NOT USED ANYWHERE
  def index
    list
    render :action => 'list'
  end

  # GETs should be safe (see http://www.w3.org/2001/tag/doc/whenToUseGet.html)
  verify :method => :post, :only => [ :destroy, :create, :update ],
         :redirect_to => { :action => :list }

  # GENERATED BY SCAFFOLDING, CURRENTLY NOT USED ANYWHERE
  def list
    @marketing_campaigns = MarketingCampaign.paginate( :page => params[:page], :per_page => 10, :order => 'finished_at DESC')                                                               
  end

  # GENERATED BY SCAFFOLDING, CURRENTLY NOT USED ANYWHERE
  def show
    @marketing_campaign = MarketingCampaign.find(params[:id])
  end

  #------------------------------------------------------
  #- Initialiaze new campaign, currently two places     -
  #- where it is possible from: Project Details and     -
  #- Marketing Campaign screens, hence the reference    -
  #- to the current project (either directly or through -
  #- another marketing campaign) is possible            -
  #------------------------------------------------------
  def new
    @marketing_campaign = MarketingCampaign.new
    if params[:project] != nil
      project = Project.find(params[:project])
      @marketing_campaign.project_id = project.project_id
    end    
  end

  #--------------------------------------------
  #- Clone current marketing campaign details -
  #--------------------------------------------
  def copy
    @prev_marketing_campaign_id = session[:marketing_campaign_id]
    marketing_campaign_to_clone = MarketingCampaign.find(params[:id])
    @marketing_campaign = marketing_campaign_to_clone.clone
    @marketing_campaign.campaign_status = 'i'    
  end

  #---------------------------------
  #- Create new marketing campaign -
  #---------------------------------
  def create
    @marketing_campaign = MarketingCampaign.new(params[:marketing_campaign])
         
    # updated by
    @marketing_campaign.updated_by = get_user.login_id
    
    # combine two field: date and time - into one
    @marketing_campaign.finished_at = date_time_to_db_format(params[:mark_campaign_finish_date][:finish_date],
                                                             params[:mark_campaign_finish_time][:finish_time]
                                                             ) unless params[:mark_campaign_finish_date].blank?
    if @marketing_campaign.save
      flash[:notice] = 'Marketing Campaign was successfully created.'
      redirect_to :controller => 'marketing_campaigns', :action => 'edit', :id => @marketing_campaign
    else
      finish_date_values
      # updated by
      @marketing_campaign.updated_by = nil
      render :action => 'new'
    end
  end

  #--------------------------------
  #- Edit marketing campaign mode -
  #--------------------------------
  def edit
    @marketing_campaign = MarketingCampaign.find(params[:id])
 
    finish_date_values
  end
  
  #-----------------------------------
  #- Save marketing campaign updates -
  #-----------------------------------
  def update
    @marketing_campaign = MarketingCampaign.find(params[:id])
        
    # updated by
    @marketing_campaign.updated_by = get_user.login_id
    
    # combine two field: date and time - into one
    @marketing_campaign.finished_at = date_time_to_db_format(params[:mark_campaign_finish_date][:finish_date],
                                                             params[:mark_campaign_finish_time][:finish_time]
                                                            ) unless params[:mark_campaign_finish_date].blank?

    if @marketing_campaign.update_attributes(params[:marketing_campaign])
      flash[:notice] = 'Marketing Campaign was successfully updated.'
      redirect_to :action => 'edit', :id => @marketing_campaign
    else
      finish_date_values
      render :action => 'edit'
    end
  end

  #------------------------------------------------------
  #- Delete marketing campaign, currently not in use    -
  #- as deletion happens only on Project Details screen -
  #- hence in projects_controller to make the response  -
  #- quicker                                            -
  #------------------------------------------------------
  def destroy
    marketing_campaign = MarketingCampaign.find(params[:id])
    project_id = marketing_campaign.project_id
    marketing_campaign.destroy
    redirect_to :controller => 'projects', :action => 'edit', :id => project_id
  end
  
  #---------------------------------------
  #- Display format of finish date value -
  #---------------------------------------
  def finish_date_values
    # if a marketing campaign doesn't have a finish date
    # finish date text boxes contain 'now' by default
    @marketing_campaign.finished_at = date_time_to_db_format(params[:mark_campaign_finish_date][:finish_date],
                                                             params[:mark_campaign_finish_time][:finish_time]
                                                            ) unless params[:mark_campaign_finish_date].blank?
    if @marketing_campaign.finished_at == nil
      datetime = separate_date_time(Time.now)
    else
      datetime = separate_date_time(@marketing_campaign.finished_at)
    end
    @finish_time = datetime["time"]
    @finish_date = datetime["date"]
  end

  #------------------------------------------
  #- Ajax display of finish_date text boxes -
  #- with default value - 'now'             -
  #------------------------------------------
  def finished_date_boxes
    @finished = false
    if params[:id] == "f"
      @finished = true
      @finish_time = Time.now.strftime("%H:%M")
      @finish_date = Time.now.strftime("%d %b %Y")
    end
  end

  #----------------------------------------------------------
  #- Update campaign_manager field in the db with selection -
  #----------------------------------------------------------
  def change_campaign_manager

    if !params[:campaign].blank? && !params[:person].blank?
      @marketing_campaign = MarketingCampaign.find(params[:campaign])
      person_id = params[:person]
      @marketing_campaign.update_attribute(:campaign_manager, person_id)
    end

    render :layout => false
  end
  
end
