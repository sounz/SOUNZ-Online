#! /bin/bash
# postrm script for axyl
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postrm> `remove'
#        * <postrm> `purge'
#        * <old-postrm> `upgrade' <new-version>
#        * <new-postrm> `failed-upgrade' <old-version>
#        * <new-postrm> `abort-install'
#        * <new-postrm> `abort-install' <old-version>
#        * <new-postrm> `abort-upgrade' <old-version>
#        * <disappearer's-postrm> `disappear' <r>overwrit>r> <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

# temporary config transfer for clean-out..
CONF=/tmp/sounz.conf
if [ -f $CONF ] ; then
  . $CONF
fi

[ -n "${DEBUG}" ] && set -o xtrace

case "$1" in
    purge|remove|upgrade|failed-upgrade|abort-install|abort-upgrade|disappear)
      if [ "$1" = "purge" ] ; then
      	# zap all data and logs owned by SOUNZ admin user
        if [ ! -z $SOUNZ_USER ] ; then
          if [ ! -z SOUNZ_HOME -a -d $SOUNZ_HOME ] ; then
            rm -rf $SOUNZ_HOME
          fi

          if [ ! -z $SOUNZ_DATA -a -d $SOUNZ_DATA ] ; then
            rm -rf $SOUNZ_DATA
          fi

          if [ ! -z SOUNZ_LOGS -a -d $SOUNZ_LOGS ] ; then
            rm -rf $SOUNZ_LOGS
          fi

          if [ -d /etc/sounz ] ; then
            rm -rf /etc/sounz
          fi
          rm -f $CONF
          # If we have user 'sounz' then remove it
          if [ "$SOUNZ_USER" = "sounz" ] ; then
          	deluser $SOUNZ_USER || true
          	delgroup $SOUNZ_USER || true
          	if [ -d /home/${SOUNZ_USER} ] ; then
              rm -rf /home/${SOUNZ_USER}
          	fi
          fi
          
        fi
      fi
      ;;

    *)
        echo "postrm called with unknown argument \`$1'" >&2
        exit 1

esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0